{
  "$schema": "http://json-schema.org/schema",
  "version": 2,
  "cli": "nx",
  "title": "Deno Run Executor",
  "description": "Run a JavaScript or TypeScript program in watch mode",
  "type": "object",
  "properties": {
    "buildTarget": {
      "type": "string",
      "description": "The target used to build your Deno application. Only the target's options are used to pass to 'deno run', the targets's executor is not invoked. This option is optional if the 'denoConfig' and 'main' options are provided.",
      "x-priority": "important"
    },
    "denoConfig": {
      "type": "string",
      "description": "Provide a different Deno config file than what is specified in the 'buildTarget'. This option is required if the 'buildTarget' option is not specified.",
      "x-priority": "important"
    },
    "main": {
      "type": "string",
      "description": "Provide a different entry point than what is specified in the 'buildTarget'. This option is required if the 'buildTarget' option is not specified.",
      "x-priority": "important"
    },
    "cert": {
      "type": "string",
      "description": "Load certificate authority from PEM encoded file."
    },
    "check": {
      "oneOf": [{ "type": "boolean" }, { "type": "string" }],
      "description": "Type-check modules. Deno does not type-check modules automatically from v1.23 onwards. Set this option to enable type-checking or use the 'deno check' subcommand. If the value of '--check=all' is supplied, diagonstic errors from remote modules will be included.",
      "enum": ["none", "local", "all"],
      "default": "local",
      "x-priority": "important"
    },
    "inspect": {
      "description": "Activate inspector on host:port, wait for debugger to connect before running user code. Defaults to 127.0.0.1:9229 if no host:port is provided",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "location": {
      "type": "string",
      "description": "value of 'globalThis.location', use by web APIs"
    },
    "lockWrite": {
      "type": "boolean",
      "description": "Force overwriting the lock file. You can configure which lock file to use in the deno.json in the project root."
    },
    "noLock": {
      "type": "boolean",
      "description": "Disable auto discovery of the lock file."
    },
    "noNpm": {
      "type": "boolean",
      "description": "Do not resolve npm modules"
    },
    "noRemote": {
      "type": "boolean",
      "description": "Do not resolve remote modules"
    },
    "nodeModulesDir": {
      "type": "string",
      "description": "Creates a local node_modules folder"
    },
    "quiet": {
      "aliases": ["q"],
      "type": "boolean",
      "description": "Suppress diagnostic output."
    },
    "reload": {
      "description": "Reload source code cache (recompile TypeScript)",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "unstable": {
      "type": "boolean",
      "description": "Enable unstable features and APIs."
    },
    "seed": {
      "type": "number",
      "description": "set the random number generator seed"
    },
    "watch": {
      "type": "boolean",
      "description": "Watch for file changes and restart process automatically. Only local files form entry point module graph are watched.",
      "default": true
    }
  },
  "required": []
}
