{
  "$schema": "http://json-schema.org/schema",
  "version": 2,
  "title": "Rspack build executor",
  "description": "",
  "type": "object",
  "properties": {
    "target": {
      "type": "string",
      "description": "The platform to target (e.g. web, node).",
      "enum": ["web", "node"]
    },
    "main": {
      "type": "string",
      "description": "The main entry file."
    },
    "outputPath": {
      "type": "string",
      "description": "The output path for the bundle."
    },
    "outputFileName": {
      "type": "string",
      "description": "The main output entry file"
    },
    "tsConfig": {
      "type": "string",
      "description": "The tsconfig file to build the project."
    },
    "typeCheck": {
      "type": "boolean",
      "description": "Skip the type checking."
    },
    "indexHtml": {
      "type": "string",
      "description": "The path to the index.html file."
    },
    "rspackConfig": {
      "type": "string",
      "description": "The path to the rspack config file."
    },
    "optimization": {
      "type": "boolean",
      "description": "Enables optimization of the build output."
    },
    "sourceMap": {
      "description": "Output sourcemaps. Use 'hidden' for use with error reporting tools without generating sourcemap comment.",
      "default": true,
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "assets": {
      "type": "array",
      "description": "List of static application assets.",
      "default": [],
      "items": {
        "$ref": "#/definitions/assetPattern"
      }
    },
    "extractLicenses": {
      "type": "boolean",
      "description": "Extract all licenses in a separate file.",
      "default": true
    },
    "fileReplacements": {
      "description": "Replace files with other files in the build.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "replace": {
            "type": "string",
            "description": "The file to be replaced.",
            "x-completion-type": "file"
          },
          "with": {
            "type": "string",
            "description": "The file to replace with.",
            "x-completion-type": "file"
          }
        },
        "additionalProperties": false,
        "required": ["replace", "with"]
      },
      "default": []
    },
    "mode": {
      "type": "string",
      "description": "Mode to run the build in.",
      "enum": ["development", "production", "none"]
    },
    "generatePackageJson": {
      "type": "boolean",
      "description": "Generates a `package.json` and pruned lock file with the project's `node_module` dependencies populated for installing in a container. If a `package.json` exists in the project's directory, it will be reused with dependencies populated."
    }
  },
  "required": ["target", "main", "outputPath", "tsConfig", "rspackConfig"],
  "definitions": {
    "assetPattern": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "glob": {
              "type": "string",
              "description": "The pattern to match."
            },
            "input": {
              "type": "string",
              "description": "The input directory path in which to apply 'glob'. Defaults to the project root."
            },
            "ignore": {
              "description": "An array of globs to ignore.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "output": {
              "type": "string",
              "description": "Absolute path within the output."
            },
            "watch": {
              "type": "boolean",
              "description": "Enable re-building when files change.",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": ["glob", "input", "output"]
        },
        {
          "type": "string"
        }
      ]
    }
  }
}
